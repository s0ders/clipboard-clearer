name: CI

on:
  push:
    branches: [ "main" ]

env:
  GO_VERSION: 1.24.2

permissions: read-all

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: golangci-lint
        uses: golangci/golangci-lint-action@4afd733a84b1f43292c63897423277bb7f4313a9 # v8.0.0
        with:
          install-mode: 'goinstall'
          version: 'latest'

  versioning:
    name: Versioning
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      release: ${{ steps.go-semver.outputs.MAIN_NEW_RELEASE }}
      semver: ${{ steps.go-semver.outputs.MAIN_SEMVER }}
    needs:
      - lint
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up GPG key
        run: |
          mkdir -p ~/secrets
          echo "${{ secrets.GPG_PRIVATE_KEY }}" > ~/secrets/private.asc
          GO_SEMVER_GPG_KEY_PATH="${HOME}/secrets/private.asc"
          chmod 600 "${GO_SEMVER_GPG_KEY_PATH}"
          echo "GO_SEMVER_GPG_KEY_PATH=${GO_SEMVER_GPG_KEY_PATH}" >> $GITHUB_ENV

      - name: Install Go Semver Release
        run: |
          curl -SL https://github.com/s0ders/go-semver-release/releases/latest/download/go-semver-release-linux-amd64 -o ./go-semver-release \
          && chmod +x ./go-semver-release

      - name: Go Semver Release
        id: go-semver
        env:
          GO_SEMVER_RELEASE_ACCESS_TOKEN: ${{ secrets.GO_SEMVER_RELEASE_ACCESS_TOKEN }}
        run: |
          ./go-semver-release release https://github.com/s0ders/clipboard-clearer.git \
          --gpg-key-path "${GO_SEMVER_GPG_KEY_PATH}" \
          --verbose

  slsa-build:
    name: SLSA build and release
    uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@v2.1.0
    needs:
      - versioning
    if: ${{needs.versioning.outputs.release == 'true'}}
    strategy:
      matrix:
        os:
          - linux
          - windows
          - darwin
        arch:
          - amd64
          - arm64
    permissions:
      id-token: write
      contents: write
      actions: read
    with:
      go-version: 1.24.2
      config-file: .github/slsa-goreleaser/${{ matrix.os }}-${{ matrix.arch }}.yml
      upload-assets: true
      upload-tag-name: ${{ needs.versioning.outputs.semver }}